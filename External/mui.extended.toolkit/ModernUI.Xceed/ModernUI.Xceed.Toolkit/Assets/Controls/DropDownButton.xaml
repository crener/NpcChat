<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

    <Style TargetType="{x:Type xctk:DropDownButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <ToggleButton x:Name="PART_DropDownButton"
                                Grid.Column="0"
                                IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Grid>
                                <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                             Background="{TemplateBinding Background}"
                                             Foreground="{TemplateBinding Foreground}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             CornerRadius="0"
                                             RenderChecked="{TemplateBinding IsOpen}"
                                             RenderEnabled="{TemplateBinding IsEnabled}"
                                             RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
                                             RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                RecognizesAccessKey="true" />
                                        <Grid x:Name="arrowGlyph"
                                    IsHitTestVisible="False"
                                    Margin="4,3,4,3"
                                    Grid.Column="1">
                                            <Path x:Name="Arrow" Width="7" Height="4"
                                               Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                               Fill="{DynamicResource ItemText}" />
                                        </Grid>
                                    </Grid>
                                </xctk:ButtonChrome>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_Popup"
                         HorizontalOffset="1"
                         VerticalOffset="1"
                         AllowsTransparency="True"
                         StaysOpen="False"
                         Placement="Bottom"
                         Focusable="False"
                         IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
                         ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border BorderThickness="1"
                             Background="{DynamicResource PopupBackground}"
                             BorderBrush="{DynamicResource WindowBorderActive}"
                             MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource ItemTextDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>