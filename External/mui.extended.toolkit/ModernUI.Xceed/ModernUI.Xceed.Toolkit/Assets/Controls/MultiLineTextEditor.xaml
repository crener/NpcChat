<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

  <Path x:Key="DefaultContent" 
    Fill="{DynamicResource ItemText}"
    Stretch="Uniform"
    Width="16" Height="16"
    Data="F1 M 26,22.0001L 27,21.9998L 27,27L 26.0001,27.0003C 23.2386,27.0003 21.0001,29.2389 21.0001,32.0003L 21,46.0002C 21,48.7616 23.2386,51.0002 25.9999,51.0002L 27,51.0002L 27,47L 33.75,53.5L 27,60L 27,56L 26,56C 20.4771,56 16,51.5229 16,46L 16,32.0001C 16,26.4773 20.4771,22.0001 26,22.0001 Z M 33,27L 59,27L 59,32L 33,32L 33,27 Z M 36,35L 59,35L 59,40L 36,40L 36,35 Z M 33,43L 59,43L 59,48L 33,48L 33,43 Z"
    />
    
  <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid SnapsToDevicePixels="True">

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <Border Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      SnapsToDevicePixels="True">
                <ContentPresenter Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
              </Border>

              <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                   Grid.Column="1"
                                   CornerRadius="0"
                                   RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:MultiLineTextEditor}}"
                                   RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:MultiLineTextEditor}}"
                                   RenderMouseOver="{TemplateBinding IsMouseOver}"
                                   RenderPressed="{TemplateBinding IsPressed}">
                <Grid x:Name="arrowGlyph"
                      IsHitTestVisible="False"
                      Margin="5">
                  <Path x:Name="Arrow"
                        Width="7"
                        Height="4"
                        Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                        Fill="{DynamicResource ItemText}" />
                </Grid>
              </xctk:ButtonChrome>
            </Grid>

          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource ItemTextDisabled}" />
              <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- =============================================================================== -->
  <!-- MultiLineTextEditor                                                             -->
  <!-- =============================================================================== -->

  <Style TargetType="{x:Type xctk:MultiLineTextEditor}">
    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
    <Setter Property="BorderThickness" Value="1,1,0,1" />
    <Setter Property="Content" Value="{StaticResource DefaultContent}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="2,0,0,0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type xctk:MultiLineTextEditor}">
          <Grid x:Name="Root">
            <ToggleButton x:Name="PART_DropDownButton"
                          Grid.Column="0"
                          IsTabStop="True"
                          MinHeight="22"
                          SnapsToDevicePixels="True"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Padding="{TemplateBinding Padding}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ToggleButtonStyle}"
                          IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
            <Popup IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
                   StaysOpen="False"
                   Placement="Bottom"
                   SnapsToDevicePixels="True"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide"
                   Width="{TemplateBinding DropDownWidth}"
                   Height="{TemplateBinding DropDownHeight}"
                   ToolTip="{x:Static sys:String.Empty}">
              <Popup.Resources>
                <Style TargetType="ToolTip">
                  <Style.Triggers>
                    <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Popup.Resources>
              <Border BorderThickness="1"
                      Background="{DynamicResource PopupBackground}"
                      BorderBrush="{DynamicResource InputBorderHover}">
                <Grid>
                  <TextBox x:Name="PART_TextBox"
                           AcceptsReturn="true"
                           TextWrapping="{TemplateBinding TextWrapping}"
                           Padding="{TemplateBinding Padding}"
                           VerticalScrollBarVisibility="Auto"
                           HorizontalScrollBarVisibility="Auto"
                           SpellCheck.IsEnabled="{TemplateBinding IsSpellCheckEnabled}"
                           IsReadOnly="{TemplateBinding IsReadOnly}"
                           Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                           TextAlignment="{TemplateBinding TextAlignment}"
                           Margin="3" />
                  <Thumb x:Name="PART_ResizeThumb"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Bottom"
                         Cursor="SizeNWSE">
                    <Thumb.Template>
                      <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="Transparent">
                          <Path Data="M0.5,6.5 L6.5,0.5 M6.5,3.5 L3.5,6.5"
                                Stroke="{DynamicResource ItemText}"
                                StrokeThickness="1" />
                        </Grid>
                      </ControlTemplate>
                    </Thumb.Template>
                  </Thumb>
                </Grid>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
      </Trigger>
    </Style.Triggers>
  </Style>


</ResourceDictionary>